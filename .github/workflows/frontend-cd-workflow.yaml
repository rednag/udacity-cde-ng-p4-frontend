name: frontend-cd-workflow

# Ensure the workflow runs on schedule (Sunday at 0:00) and on push to the main branch
on:
  workflow_dispatch:
  push:
    branches:
      - main

#Use a matrix strategy to use Node.js versions 16.x and 18.x
jobs:
  linting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - run: npm ci    
      - run: npm run lint

  testing:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: latest

      - run: npm ci
      - run: CI=true npm run test

  build:
    needs: [linting, testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: latest
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
          aws-region: us-east-1
      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - env:
          REPO_NAME: frontend  
        run: |
          docker build --build-arg REACT_APP_MOVIE_API_URL="a9039c49599db41549dc1dbd1cb9c9f9-742795800.us-east-1.elb.amazonaws.com"
          docker push 099629925974.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:${GITHUB_SHA::7}

      - run: aws eks --region us-east-1 update-kubeconfig --name cluster
      - env:
          IMAGE_TAG: latest
          REPO_NAME: frontend
        run: |
          cd k8s
          aws eks --region us-east-1 update-kubeconfig --name cluster
          kustomize edit set image 099629925974.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:${GITHUB_SHA::7}
          kustomize build . | kubectl apply -f - --validate=false